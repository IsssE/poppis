// schema.prisma

generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider  = "postgresql"
    url       = env("POSTGRES_PRISMA_URL") // uses connection pooling
    directUrl = env("POSTGRES_URL_NON_POOLING") // uses a direct connection
}

model Auth {
    id              String @id @default(uuid())
    password        String
    user            Profile?
}

model Profile {
    id              String @id @default(uuid())
    username        String @unique
    displayName     String
    auth            Auth   @relation(fields: [id], references: [id])
    achievements    Achievements[]
}

model Achievements {
    profileId           String         // Foreign key
    profile             Profile        @relation(fields: [profileId], references: [id])
    achievementTypeId   Int          // Foreign key
    achievementType     AchievementType @relation(fields: [achievementTypeId], references: [id])

    @@id([profileId, achievementTypeId])
    @@unique([profileId, achievementTypeId])
}

model AchievementType {
    id              Int            @id @default(autoincrement())
    name            String         @unique
    points          Int
    categoryId      Int
    description     String?
    groupId         Int?
    category        CategoryType? @relation(fields: [categoryId], references: [id])
    group           AchievementGroup? @relation(fields: [groupId], references: [id])
    achievements    Achievements[] // One-to-many relationship
    
}

model AchievementGroup {
    id              Int            @id @default(autoincrement())
    name            String         @unique
    description     String?
    achievementTypes AchievementType[] // One-to-many relationship
}

model CategoryType {
    id              Int            @id @default(autoincrement())
    name            String         @unique
    description     String?
    achievementTypes AchievementType[] // One-to-many relationship
}